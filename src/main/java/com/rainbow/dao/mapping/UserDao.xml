<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rainbow.dao.UserDao">
	
	<resultMap id="addressMap" type="com.rainbow.beans.Address" >
         <result property="userId"     column="user_id" />
	     <result property="addressId" column="address_id" />
	     <result property="addressDetail"    column="address_detail" />
	     <result property="addressName"    column="address_name" />
	     <result property="addressPhone"    column="address_phone" />
	     <result property="type" column="type" />
	 </resultMap>
 
	<select id="AddressList" resultMap="addressMap">
		select 
			user_id userId, 
			address_id addressId,
			address_detail addressDetail,
			address_name addressName,
			address_phone addressPhone,
			type type
			from address where user_id=#{userId} 
	</select>
	
	
    <select id="findByUserId" resultType="User">
		select 
			user_id userId, 
			user_name userName,
			sex sex,
			age age, 
			phone phone,
			e_mail eMail,
			address address,
			type type,
			praise_rate praiseRate
		from user where user_id=#{userId} 
	</select>
	<select id="login" resultType="User">
		select 
			user_id userId, 
			user_name userName,
			password password,
			sex sex,
			age age, 
			phone phone,
			type type,
			e_mail eMail,
			address address,
			praise_rate praiseRate
		from user where user_name=#{userName} and password=#{password} and type like concat(#{type},'%')
	</select>
	 <select id="UserList" resultType="User">
		select 
			user_id userId, 
			user_name userName,
			sex sex,
			age age, 
			phone phone,
			e_mail eMail,
			address address,
			type type,
			praise_rate praiseRate
		from user where 1=1
	</select>
	
 
	
	<select id="UserListByQuery" resultType="User">
		select 
			user_id userId, 
			user_name userName,
			sex sex,
			age age, 
			phone phone,
			e_mail eMail,
			address address,
			type type,
			praise_rate praiseRate
		from user 
		<where>
			
            <if test="userName!=null and userName!='' ">
				and user_name like concat('%',#{userName},'%')
		    </if>
            <if test="sex !=null and sex!=''">
				and sex=#{sex} 
		    </if>
		</where>
 
	</select>
	
	<update id="updateUser"  parameterType="User"  >
		update user set user_name=#{userName},sex=#{sex},age=#{age},phone=#{phone},e_mail=#{eMail},address=#{address}
		where user_id=#{userId}
	</update>
	
	<insert id="createUser">
		insert into user(user_id,user_name) 
		values(#{userId},#{userName})
	</insert>

  <update id="editType" >
		update user set type=#{type} where user_id=#{userId}
	</update>
	
</mapper>